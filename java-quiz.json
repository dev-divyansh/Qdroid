[
  {
    "question": "What is Java, and how is it different from JavaScript?",
    "options": [
      "A. Java is a programming language used for web development.",
      "B. Java is a statically-typed, compiled programming language used for a wide range of applications, while JavaScript is a dynamically-typed, interpreted scripting language primarily used for web development.",
      "C. Java and JavaScript are the same language with different names.",
      "D. Java is a scripting language primarily used for web development."
    ],
    "answer": "B. Java is a statically-typed, compiled programming language used for a wide range of applications, while JavaScript is a dynamically-typed, interpreted scripting language primarily used for web development."
  },
  {
    "question": "What is the main function in a Java program, and why is it important?",
    "options": [
      "A. The main function is used to declare variables in Java.",
      "B. The main function is responsible for handling user input in Java programs.",
      "C. The main function is the entry point of a Java program, where execution begins. It's important because it specifies the starting point of the program.",
      "D. Java programs do not have a main function."
    ],
    "answer": "C. The main function is the entry point of a Java program, where execution begins. It's important because it specifies the starting point of the program."
  },
  {
    "question": "What is object-oriented programming (OOP), and how does Java support it?",
    "options": [
      "A. OOP is a programming paradigm that focuses on writing code as a series of mathematical functions. Java does not support OOP.",
      "B. OOP is a programming paradigm that emphasizes the use of objects and classes. Java is an object-oriented language, and it supports OOP principles.",
      "C. OOP is a programming style used only in low-level programming languages.",
      "D. OOP is a type of data structure used in Java."
    ],
    "answer": "B. OOP is a programming paradigm that emphasizes the use of objects and classes. Java is an object-oriented language, and it supports OOP principles."
  },
  {
    "question": "What is the difference between a class and an object in Java?",
    "options": [
      "A. Classes and objects are the same in Java.",
      "B. A class is a blueprint or template for creating objects, while an object is an instance of a class.",
      "C. A class is an instance of an object, and an object is a blueprint for creating classes.",
      "D. Classes are used for defining data types, while objects are used for looping in Java."
    ],
    "answer": "B. A class is a blueprint or template for creating objects, while an object is an instance of a class."
  },
  {
    "question": "What is a constructor in Java, and why is it used?",
    "options": [
      "A. A constructor is used to create loops in Java programs.",
      "B. A constructor is a method that is used for type casting in Java.",
      "C. A constructor is a special method in a class that is used to initialize objects when they are created. It is used to set initial values for object properties.",
      "D. Constructors are used for defining user interfaces in Java."
    ],
    "answer": "C. A constructor is a special method in a class that is used to initialize objects when they are created. It is used to set initial values for object properties."
  },
  {
    "question": "Explain the 'public,' 'private,' and 'protected' access modifiers in Java.",
    "options": [
      "A. These are data types in Java.",
      "B. These are keywords used for creating arrays in Java.",
      "C. These are access modifiers that control the visibility and accessibility of class members. 'public' allows access from anywhere, 'private' restricts access to the class itself, and 'protected' allows access within the class and its subclasses.",
      "D. These are used for defining switch cases in Java."
    ],
    "answer": "C. These are access modifiers that control the visibility and accessibility of class members. 'public' allows access from anywhere, 'private' restricts access to the class itself, and 'protected' allows access within the class and its subclasses."
  },
  {
    "question": "What is the purpose of the 'static' keyword in Java?",
    "options": [
      "A. The 'static' keyword is used for creating variables that cannot be modified in Java.",
      "B. The 'static' keyword is used for defining animations in Java applications.",
      "C. The 'static' keyword is used to specify that a variable or method belongs to the class itself, rather than to instances of the class. It allows access without creating an object of the class.",
      "D. The 'static' keyword is used for handling user input in Java programs."
    ],
    "answer": "C. The 'static' keyword is used to specify that a variable or method belongs to the class itself, rather than to instances of the class. It allows access without creating an object of the class."
  },
  {
    "question": "What is inheritance in Java, and how does it work?",
    "options": [
      "A. Inheritance is a concept in Java that allows objects to inherit properties and behaviors from other objects of the same class.",
      "B. Inheritance is a mechanism in Java that allows a class to inherit properties and methods from another class. It promotes code reusability and supports the 'is-a' relationship.",
      "C. Inheritance is a process used for creating new objects in Java.",
      "D. Inheritance is a design pattern used for error handling in Java."
    ],
    "answer": "B. Inheritance is a mechanism in Java that allows a class to inherit properties and methods from another class. It promotes code reusability and supports the 'is-a' relationship."
  },
  {
    "question": "What is method overloading in Java, and how is it achieved?",
    "options": [
      "A. Method overloading is a feature in Java that allows methods to be overloaded with multiple return types.",
      "B. Method overloading is a mechanism that allows a class to inherit methods from another class.",
      "C. Method overloading is a way to create loops in Java programs.",
      "D. Method overloading is a feature in Java that allows multiple methods with the same name but different parameter lists to coexist in the same class."
    ],
    "answer": "D. Method overloading is a feature in Java that allows multiple methods with the same name but different parameter lists to coexist in the same class."
  },
  {
    "question": "What is the 'try-catch' block in Java, and how is it used for exception handling?",
    "options": [
      "A. The 'try-catch' block is a way to create loops in Java programs.",
      "B. The 'try-catch' block is used to define variables in Java.",
      "C. The 'try-catch' block is used for handling exceptions in Java. It allows the programmer to specify a block of code to try and another block to catch and handle exceptions.",
      "D. The 'try-catch' block is used for defining user interfaces in Java applications."
    ],
    "answer": "C. The 'try-catch' block is used for handling exceptions in Java. It allows the programmer to specify a block of code to try and another block to catch and handle exceptions."
  },
  {
    "question": "What is the 'for' loop in Java, and how does it work?",
    "options": [
      "A. The 'for' loop is used for creating instances of classes in Java.",
      "B. The 'for' loop is a design pattern used in Android development.",
      "C. The 'for' loop is used for defining user interfaces in Java applications.",
      "D. The 'for' loop is a control flow statement used for iterating over a range of values or a collection of elements in Java."
    ],
    "answer": "D. The 'for' loop is a control flow statement used for iterating over a range of values or a collection of elements in Java."
  },
  {
    "question": "What is the 'break' statement in Java, and how is it used?",
    "options": [
      "A. The 'break' statement is used for creating instances of classes in Java.",
      "B. The 'break' statement is used to define data types in Java.",
      "C. The 'break' statement is used for terminating the execution of a loop or a switch statement prematurely in Java.",
      "D. The 'break' statement is used for defining user interfaces in Java applications."
    ],
    "answer": "C. The 'break' statement is used for terminating the execution of a loop or a switch statement prematurely in Java."
  },
  {
    "question": "What is the 'continue' statement in Java, and how is it used?",
    "options": [
      "A. The 'continue' statement is used for defining data types in Java.",
      "B. The 'continue' statement is used for creating instances of classes in Java.",
      "C. The 'continue' statement is used for resuming the next iteration of a loop in Java without executing the remaining code in the current iteration.",
      "D. The 'continue' statement is used for defining user interfaces in Java applications."
    ],
    "answer": "C. The 'continue' statement is used for resuming the next iteration of a loop in Java without executing the remaining code in the current iteration."
  },
  {
    "question": "What is a 'package' in Java, and how is it used for organizing code?",
    "options": [
      "A. A package is a way to create loops in Java programs.",
      "B. A package is a design pattern used for organizing classes in Java.",
      "C. A package is a way to group related classes and interfaces in Java. It helps in organizing and managing code by providing a namespace for classes.",
      "D. A package is used for defining animations in Java applications."
    ],
    "answer": "C. A package is a way to group related classes and interfaces in Java. It helps in organizing and managing code by providing a namespace for classes."
  },
  {
    "question": "What is the purpose of the 'super' keyword in Java, and when is it used?",
    "options": [
      "A. The 'super' keyword is used for defining animations in Java applications.",
      "B. The 'super' keyword is used for creating instances of classes in Java.",
      "C. The 'super' keyword is used to call a method or access a property of the superclass in a subclass. It is used to override or extend the behavior of the superclass.",
      "D. The 'super' keyword is used for creating loops in Java programs."
    ],
    "answer": "C. The 'super' keyword is used to call a method or access a property of the superclass in a subclass. It is used to override or extend the behavior of the superclass."
  },
  {
    "question": "What is the 'final' keyword in Java, and how is it used?",
    "options": [
      "A. The 'final' keyword is used for creating variables that cannot be modified in Java.",
      "B. The 'final' keyword is used for defining data types in Java.",
      "C. The 'final' keyword is a design pattern used for organizing classes.",
      "D. The 'final' keyword is used for handling user input in Java programs."
    ],
    "answer": "A. The 'final' keyword is used for creating variables that cannot be modified in Java."
  } ,
  {
    "question": "What is the 'static' keyword used for in Java, and when should it be used?",
    "options": [
      "A. The 'static' keyword is used for creating abstract classes in Java.",
      "B. The 'static' keyword is used for defining animations in Java applications.",
      "C. The 'static' keyword is used to specify that a variable or method belongs to the class itself, rather than to instances of the class. It should be used when you want to access a method or variable without creating an object of the class.",
      "D. The 'static' keyword is used for creating loops in Java programs."
    ],
    "answer": "C. The 'static' keyword is used to specify that a variable or method belongs to the class itself, rather than to instances of the class. It should be used when you want to access a method or variable without creating an object of the class."
  },
  {
    "question": "What is a 'method signature' in Java, and what does it include?",
    "options": [
      "A. A method signature is a graphical representation of a method's behavior in Java.",
      "B. A method signature is a unique identifier for a method and includes the method name, return type, and parameter types (in order).",
      "C. A method signature is a design pattern used for organizing classes in Java.",
      "D. A method signature is a keyword used for creating instances of classes in Java."
    ],
    "answer": "B. A method signature is a unique identifier for a method and includes the method name, return type, and parameter types (in order)."
  },
  {
    "question": "What is a 'getter' method in Java, and why is it used?",
    "options": [
      "A. A getter method is used for creating instances of classes in Java.",
      "B. A getter method is used for defining data types in Java.",
      "C. A getter method is a method used to retrieve the value of a private instance variable. It is used to encapsulate the data and provide controlled access to it.",
      "D. A getter method is used for handling user input in Java programs."
    ],
    "answer": "C. A getter method is a method used to retrieve the value of a private instance variable. It is used to encapsulate the data and provide controlled access to it."
  },
  {
    "question": "What is 'method overriding' in Java, and when is it used?",
    "options": [
      "A. Method overriding is a way to create loops in Java programs.",
      "B. Method overriding is a mechanism for creating new objects in Java.",
      "C. Method overriding is a feature in Java that allows a subclass to provide a specific implementation of a method that is already defined in its superclass. It is used when a subclass wants to change the behavior of an inherited method.",
      "D. Method overriding is used for defining user interfaces in Java applications."
    ],
    "answer": "C. Method overriding is a feature in Java that allows a subclass to provide a specific implementation of a method that is already defined in its superclass. It is used when a subclass wants to change the behavior of an inherited method."
  },
  {
    "question": "What is a 'try-with-resources' statement in Java, and why is it important for resource management?",
    "options": [
      "A. The 'try-with-resources' statement is a way to create loops in Java programs.",
      "B. The 'try-with-resources' statement is used for defining data types in Java.",
      "C. The 'try-with-resources' statement is a mechanism for managing resources like file streams or database connections. It automatically closes resources when they are no longer needed, helping to prevent resource leaks.",
      "D. The 'try-with-resources' statement is used for handling user input in Java programs."
    ],
    "answer": "C. The 'try-with-resources' statement is a mechanism for managing resources like file streams or database connections. It automatically closes resources when they are no longer needed, helping to prevent resource leaks."
  }
]
